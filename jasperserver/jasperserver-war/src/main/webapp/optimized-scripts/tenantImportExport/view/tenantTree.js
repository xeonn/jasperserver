define(["require","common/component/tree/Tree","jquery","underscore","json3","common/component/tree/TreeDataLayer","common/component/tree/plugin/TooltipPlugin","common/component/tree/plugin/ContextMenuTreePlugin","bundle!CommonBundle","jrs.configs"],function(e){"use strict";var t=e("common/component/tree/Tree"),n=e("jquery"),o=e("underscore"),r=e("json3"),a=e("common/component/tree/TreeDataLayer"),l=e("common/component/tree/plugin/TooltipPlugin"),i=e("common/component/tree/plugin/ContextMenuTreePlugin"),c=e("bundle!CommonBundle"),u=e("jrs.configs"),m={tenantProcessor:function(e){return{processItem:function(t){return t._node=!0,t.label=t.value.tenantName,t.value.label=t.label,t.value.uri=t.value.tenantUri,t.id===e&&(t.addToSelection=!0),t}}}};return function(e){var s=e.comparator,d=t.use(l,{i18n:c,contentTemplate:e.tooltipContentTemplate});return e.contextMenu&&(d=d.use(i,{contextMenu:e.contextMenu})),d.create().instance(o.extend({},{selection:{allowed:{left:!0,right:!0},multiple:!1},rootless:!0,collapsed:!0,lazyLoad:!0,allowMouseDownEventPropagation:!0,dataUriTemplate:u.contextPath+"/rest_v2/organizations?{{= id != 'organizations' ? 'rootTenantId=' + id : ''}}&offset={{= offset }}&limit={{= limit }}&maxDepth=1",levelDataId:"id",getDataArray:function(e,t,n){var o=e?e.organization:[];return s&&o.sort(s),o},processors:[m.tenantProcessor(e.tenantId)],customDataLayers:{"/":o.extend(new a({dataUriTemplate:u.contextPath+"/flow.html?_flowId=treeFlow&method=getNode&provider=tenantTreeFoldersProvider&uri=/&prefetch=%2F",processors:[m.tenantProcessor(e.tenantId)],getDataArray:function(e){return e=r.parse(n(e).text()),[{id:e.id,tenantName:e.label,tenantUri:"/",resourceType:"folder",_links:{content:"@fakeContentLink"}}]}}),{accept:"text/html",dataType:"text"})}}))}});