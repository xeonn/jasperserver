define(["require","bundle!jasperserver_messages","jrs.configs","common/transport/request","dataSource/fileDataSource/enum/characterEncodings","dataSource/fileDataSource/enum/delimitersTextDataSource","dataSource/fileDataSource/FileDataSourceModel"],function(e){var i=e("bundle!jasperserver_messages"),r=e("jrs.configs"),t=e("common/transport/request"),l=e("dataSource/fileDataSource/enum/characterEncodings"),n=e("dataSource/fileDataSource/enum/delimitersTextDataSource"),o=e("dataSource/fileDataSource/FileDataSourceModel");return o.extend({fileTypes:["txt","csv"],validation:function(){var e={};return _.extend(e,o.prototype.validation,{fieldDelimiterOther:[{fn:function(e,r,t){return"other"===t.fieldDelimiter&&(_.isNull(e)||_.isUndefined(e)||_.isString(e)&&""===e)?i["fillParameters.error.enter.field.delimiter"]:null}}],rowDelimiterOther:[{fn:function(e,r,t){return"other"===t.rowDelimiter&&(_.isNull(e)||_.isUndefined(e)||_.isString(e)&&""===e)?i["fillParameters.error.enter.row.delimiter"]:null}}]}),e}(),constructor:function(e,i){this.defaults=_.extend({},this.defaults,{fileSourceType:"repository",ftpsPort:"990",fieldDelimiter:"comma",rowDelimiter:"newLineWin",encodingType:"utf8",useFirstRowAsHeader:!0,prepareDataForReporting:!0}),o.prototype.constructor.apply(this,[e,i])},parse:function(){var e,i=o.prototype.parse.apply(this,arguments);return i.fieldDelimiterRegex="",i.fieldDelimiterPlugin="",i.fieldDelimiterOther="",e=_.find(n,function(e){return e.dbValue===i.fieldDelimiter}),_.isUndefined(e)?i.fieldDelimiter?(i.fieldDelimiterOther=i.fieldDelimiter,i.fieldDelimiter="other"):i.fieldDelimiter=this.defaults.fieldDelimiter:i.fieldDelimiter=e.value,i.rowDelimiterRegex="",i.rowDelimiterPlugin="",i.rowDelimiterOther="",e=_.find(n,function(e){return e.dbValue===i.recordDelimiter}),_.isUndefined(e)?i.fieldDelimiter?(i.rowDelimiterOther=i.recordDelimiter,i.rowDelimiter="other"):i.rowDelimiter=this.defaults.rowDelimiter:i.rowDelimiter=e.value,delete i.recordDelimiter,e=_.find(l,function(e){return e.dbValue===i.encoding}),i.encodingType=e?e.value:this.defaults.encodingType,delete i.encoding,i},customFieldsToJSON:function(e,i){return e.fieldDelimiter="other"===e.fieldDelimiter?e.fieldDelimiterOther:_.find(n,function(i){return i.value===e.fieldDelimiter}).dbValue,delete e.fieldDelimiterRegex,delete e.fieldDelimiterPlugin,delete e.fieldDelimiterOther,e.recordDelimiter="other"===e.rowDelimiter?e.rowDelimiterOther:_.find(n,function(i){return i.value===e.rowDelimiter}).dbValue,delete e.rowDelimiter,delete e.rowDelimiterRegex,delete e.rowDelimiterPlugin,delete e.rowDelimiterOther,e.encoding=_.find(l,function(i){return i.value===e.encodingType}).dbValue,delete e.encodingType,o.prototype.customFieldsToJSON.call(this,e,i)},validationMethodOnSaveClick:function(e){var i=this,l=JSON.stringify(_.extend({},this.toJSON(),{uri:"/ignore"}));t({type:"POST",url:r.contextPath+"/rest_v2/connections",dataType:"json",data:l,headers:{"Content-Type":"application/repository.customDataSource+json",Accept:"application/table.metadata+json"}}).done(function(){i.trigger("sourceFileIsOK"),_.isFunction(e)&&e()}).fail(function(){i.trigger("sourceFileCantBeParsed")})}})});