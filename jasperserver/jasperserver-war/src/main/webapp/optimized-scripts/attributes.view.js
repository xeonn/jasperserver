if(!jaspersoft)var jaspersoft={};jaspersoft.attributes||(jaspersoft.attributes={}),function(t,e,i,s,n){function a(e,i,s){var n=t(e);n.parent().removeClass("error");var a="name"===s?n.val().strip():n.val();return i.once("invalid",function(t,e){n.parent().addClass("error").find("span").html(orgModule.messages[e])}),i.set(s,a,{validate:!0})}function l(t){t.css({height:"auto"});var e=+t.css("lineHeight").replace("px",""),i=Math.floor(Math.min(t[0].scrollHeight,t[0].clientHeight)/e)*e;t.css({height:i?i:e+"px"}),t.height()<t[0].scrollHeight&&t.height(t[0].scrollHeight)}var r="~secure~";s.MainView=i.View.extend({events:{"click textarea":"enable","click input[type=password]":"enable","blur input[type=password]":"blurSecure","click #newAttribute a":"addModel"},subViews:[],editMode:!1,validationModel:s.Attribute.instance(),addAttributeView:null,initialize:function(t){this.mainTemplateId="attributesMain",this.validationModel.collection=this.collection,this.collection.on("add",e.bind(this.addView,this)),this.initOptions=t},render:function(){return this.mainTemplate||(this.mainTemplate=n.createTemplate(this.mainTemplateId)),this.collection.context&&this.collection.fetch({success:e.bind(this.renderItems,this),reset:!0}),this.$el.html(this.mainTemplate()),this.$subEl=this.$el.find(".items"),this.$nameInput=this.$el.find("#newAttribute .attrName textarea"),this.$valueInput=this.$el.find("#newAttribute .attrValue textarea"),this.addAttributeView=new s.AttributeView({el:this.$el.find("#newAttribute"),model:this.validationModel}),this.addAttributeView.remove=function(){},this.addAttributeView.undelegateEvents(),this.addAttributeView.delegateEvents(),this.addAttributeView.registerEvents(),this.toggleList(this.initOptions.quiet),this},renderItems:function(e){this.toggleList(e.length);for(var i=0,n=this.subViews.length;n>i;i++)this.subViews[i].undelegateEvents();this.subViews.clear(),this.$subEl.hide().html("");for(var a,i=0,n=e.length;n>i;i++)e.models[i].id=e.models[i].get("name"),a=new s.AttributeView({model:e.models[i]}),this.$subEl.append(a.render().el),this.subViews.push(a);return this.$subEl.show().find("textarea").each(function(e,i){l(t(i))}),this},setContext:function(t){var i=!0;if(this.collection.context)for(var s in t)Object.hasOwnProperty.call(t,s)&&!e.isArray(t[s])&&(i=this.collection.context[s]===t[s]&&i);else i=!1;return i||(this.collection.context=t,this.collection.fetch({success:e.bind(this.renderItems,this),reset:!0}),this.$subEl.hide()),this},setEditMode:function(t){return this.editMode=t,this.toggleList(t||this.collection.length),t?this.$el.addClass("editMode"):(this.$el.removeClass("editMode"),this.disableAll()),this},toggleList:function(t){return t?(this.initOptions.quiet||this.$el.find("#noAttributes").addClass("hidden"),this.$el.find(".attributesTable").removeClass("hidden")):(this.$el.find(".attributesTable").addClass("hidden"),this.initOptions.quiet||this.$el.find("#noAttributes").removeClass("hidden")),this.clearAddForm(),this},isValid:function(){return this.collection.isValid()&&!this.$subEl.find(".error").length},save:function(){for(var t=!0,e=0,i=this.subViews.length;i>e;e++)t=this.subViews[e].save()&&t;return t},cancel:function(){this.collection.fetch({success:e.bind(this.renderItems,this),reset:!0})},clearAddForm:function(){this.$nameInput.val(""),this.$nameInput.attr("style",null).parent().removeClass("error"),this.$valueInput.val(""),this.$valueInput.attr("style",null).parent().removeClass("error"),this.addAttributeView.name="",this.addAttributeView.value=""},enable:function(e){this.editMode&&(t(e.target).attr("readonly",!1),t(e.target).val()==r&&t(e.target).val(""))},blurSecure:function(e){this.editMode&&0==t(e.target).val().length&&t(e.target).val(r)},disableAll:function(){this.$subEl.find("textarea").attr("readonly",!0),this.$subEl.find("input").attr("readonly",!0)},addModel:function(){for(var t=this.$nameInput.val(),e=0,i=this.subViews.length;i>e;e++)if("destroy"===this.subViews[e].action&&this.subViews[e].model.get("name")===t){this.subViews[e].action="nothing",this.collection.remove(this.subViews[e].model,{silent:!0});break}a(this.$nameInput,this.validationModel,"name")&&a(this.$valueInput,this.validationModel,"value")&&(this.collection.add(this.validationModel.attributes),this.validationModel.attributes={},this.clearAddForm())},addView:function(e){var i=new s.AttributeView({model:e});i.action="save",this.subViews.push(i),this.$subEl.append(i.render().el),i.$el.find("textarea").each(function(e,i){l(t(i))})}}),s.AttributeView=i.View.extend({tagName:"li",className:"leaf",action:"nothing",events:{"click  a":"remove","focus textarea":"adjustSizeOnEnable"},initialize:function(){this.secure=!!this.model.get("secure"),this.mainTemplateId=this.secure?"attributesSecureItem":"attributesItem",this.value=this.model.get("value"),this.name=this.model.get("name")},registerEvents:function(){this.$el.find(".attrName textarea").on("input propertychange",e.bind(this.respondOnInputName,this)),this.$el.find(".attrValue textarea").on("input propertychange",e.bind(this.respondOnInputValue,this)),this.$el.find(".attrValue input").on("input propertychange",e.bind(this.respondOnInputValue,this))},render:function(){this.mainTemplate||(this.mainTemplate=n.createTemplate(this.mainTemplateId));var t={name:this.model.get("name"),value:this.secure?r:this.model.get("value")};return this.$el.html(this.mainTemplate(t)),this.registerEvents(),this},save:function(){var t=!0;return this.model.isNew()&&(this.model.id=this.model.get("name")),this.model[this.action]&&this.model[this.action]()?(this.action="nothing",this.model.id=this.model.get("name")):t=!1,t},hasChanged:function(t,e){return this[e]!==t.val()},setParam:function(t,e){this[e]=t.val(),a(t,this.model,e)&&(this.action="save")},adjustSizeOfTextarea:function(t){t.css({height:"auto"});var e=+t.css("lineHeight").replace("px",""),i=Math.floor(Math.min(t[0].scrollHeight,t[0].clientHeight)/e)*e;t.css({height:i?i:e+"px"}),t.height()<t[0].scrollHeight&&t.height(t[0].scrollHeight)},adjustSizeOnEnable:function(e){l(t(e.target))},respondOnInputName:function(e){var i=t(e.target);this.hasChanged(i,"name")&&(this.setParam(i,"name"),l(i))},respondOnInputValue:function(e){var i=t(e.target);this.hasChanged(i,"value")&&(this.secure&&0==i.val().length||i.val()==r?(this.model.unset("value"),this.action="nothing"):(this.setParam(i,"value"),l(i)))},remove:function(){this.model.id?this.action="destroy":(this.action="nothing",this.model.collection.remove(this.model)),this.$el.hide().find(".error").each(function(e,i){t(i).removeClass("error")})}})}(jQuery,_,Backbone,jaspersoft.attributes,JRS.Controls.TemplateEngine);